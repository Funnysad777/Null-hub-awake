local player = game.Players.LocalPlayer -- สมมติว่าคุณใช้ LocalPlayer

-- ฟังก์ชันสำหรับตรวจสอบ Gold
local function hasEnoughGold(amount)
    local playerStats = workspace.PlayerStats:FindFirstChild(player.Name)
    if playerStats and playerStats:FindFirstChild("Gold") then
        if playerStats.Gold.Value >= amount then
            return true
        end
    end
    return false
end

-- ฟังก์ชันสำหรับส่งคำสั่ง ChangeMode
local function changeMode(name, position, angles, towerName)
    local args = {
        [1] = name,
        [2] = position * angles,
        [3] = towerName and workspace.Towers:FindFirstChild(towerName) or nil
    }
    game:GetService("ReplicatedStorage").Functions.ChangeMode:InvokeServer(unpack(args))
end

-- ตารางการอัปเกรด
local upgrades = {
    {name = "Titan Cameraman", gold = 750, position = CFrame.new(-70.979, -9.580, -58.983), angles = CFrame.Angles(0, 0, 0), tower = nil},
    {name = "Titan Cameraman2", gold = 1200, position = CFrame.new(-70.979, -9.580, -58.983), angles = CFrame.Angles(0, 0, 0), tower = "Titan Cameraman"},
    {name = "Titan Cameraman3", gold = 1500, position = CFrame.new(-70.979, -9.580, -58.983), angles = CFrame.Angles(0, 0, 0), tower = "Titan Cameraman2"},
    {name = "Titan Cameraman4", gold = 3000, position = CFrame.new(-70.979, -9.580, -58.983), angles = CFrame.Angles(0, 0, 0), tower = "Titan Cameraman3"},
    {name = "Titan Cameraman5", gold = 5000, position = CFrame.new(-70.979, -9.580, -58.983), angles = CFrame.Angles(0, 0, 0), tower = "Titan Cameraman4"}
}

-- ลูปการอัปเกรด
local i = 1
while i <= #upgrades do
    local upgrade = upgrades[i]
    if hasEnoughGold(upgrade.gold) then
        changeMode(upgrade.name, upgrade.position, upgrade.angles, upgrade.tower)
        print("ทำการอัปเกรด " .. upgrade.name)
        i = i + 1 -- ไปยังการอัปเกรดถัดไป
    else
        print("ไม่พอ Gold สำหรับการอัปเกรด " .. upgrade.name)
        wait(1) -- รอ 1 วินาที
    end
end
